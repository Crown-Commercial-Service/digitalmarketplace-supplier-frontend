// Reset styles on core HTML elements that might be injected by eg a user's browser, so that we have a known clean base
// for DM styles to build on.
@import "toolkit/shared_scss/_reset.scss";

// GOVUK Front-end toolkit variables, mixins and functions
@import "_grid_layout.scss";
@import "_typography.scss";
@import "_url-helpers.scss";

// Path to assets for use with file-url()
$path: "/suppliers/static/images/";

// Digital Marketplace Front-end toolkit shared CSS placeholders used by other DM toolkit styles
@import "toolkit/shared_placeholders/_dm-typography.scss";
@import "toolkit/shared_placeholders/_mixins.scss";
@import "toolkit/shared_placeholders/_placeholders.scss";
@import "toolkit/shared_placeholders/_temporary-messages.scss";

// Digital Marketplace Front-end toolkit shared styles between multiple apps
@import "toolkit/shared_scss/_dmspeak.scss";
@import "toolkit/shared_scss/_lists.scss";

// Digital Marketplace Front-end toolkit styles (only import the files you need)
@import "toolkit/_breadcrumb.scss";
@import "toolkit/_browse-list.scss";
@import "toolkit/_buttons.scss";
@import "toolkit/_contact-details";
@import "toolkit/_digital-marketplace-colours.scss";
@import "toolkit/_document";
@import "toolkit/_grids.scss";
@import "toolkit/_instruction-list.scss";
@import "toolkit/_notification-banners.scss";
@import "toolkit/_page-headings.scss";
@import "toolkit/_phase-banner.scss";
@import "toolkit/_proposition-header.scss";
@import "toolkit/_secondary-action-link.scss";
@import "toolkit/_service-id.scss";
@import "toolkit/_temporary-message.scss";
@import "toolkit/forms/_combinations.scss";
@import "toolkit/forms/_checkbox-tree.scss";  // Has to be imported after _combinations.scss, which defines the
                                              // $border-width variable that _checkbox-tree.scss relies upon. :sad:
@import "toolkit/forms/_hint.scss";
@import "toolkit/forms/_list-entry.scss";
@import "toolkit/forms/_pricing.scss";
@import "toolkit/forms/_questions.scss";
@import "toolkit/forms/_selection-buttons.scss";
@import "toolkit/forms/_summary.scss";
@import "toolkit/forms/_textboxes.scss";
@import "toolkit/forms/_upload.scss";
@import "toolkit/forms/_validation.scss";
@import "toolkit/forms/_word-counter.scss";
@import "toolkit/search/_search-result.scss";


// App-specific styles
@import "_assurance-question.scss";           // This could probably be removed as the only usage is in service editing
                                              // and editing expired services is not officially supported (it can be
                                              // done only by hacking URLs). However, without also removing supporting
                                              // HTML and/or code that allows assurance questions to go in, it doesn't
                                              // make sense to remove the styling.
@import "_create_supplier.scss";
@import "_footer.scss";
@import "_framework-application.scss";
@import "_service-status.scss";
@import "_service_submission.scss";
@import "_single-summary-page.scss";
@import "_supplier-declaration.scss";
@import "_updates.scss";
@import "_view-service-link.scss";

// Misc styles
// TODO: Move misc styling into their own partial files or the Digital Marketplace FE Toolkit
#wrapper, .wrapper {
  @extend %site-width-container;
}

#content {
  @extend %contain-floats;
  clear: both;
  margin-bottom: $gutter * 2;
}

.authorisation-form-wrapper {

  margin-top: 40px;

  form .question {
    margin: 10px 0 15px 0;
  }

  .button-save {
    margin-top: 0;
  }
}

.padding-bottom-small {
  padding-bottom: 10px;
}


// These ins/del styles should be centralised in the frontend-toolkit at the next convenient opportunity.
// Our toolkit should provides generic styling for any core HTML element types that we use - these should never be
// app-specific.
ins {
  text-decoration: none;
  background-color: #cce0d6;
  padding: 0 3px;
}

del {
  background-color: #efcfd1;
  padding: 0 3px;
}


// These styles are to customise the country picker widget supplied by registers. The country picker's styles are
// included in a separate stylesheet which is brought in by the country picker npm package. This makes is difficult
// to update the source, so we do it here. It's important that the country picker's style sheet is loaded in the
// template before our own CSS, so the styles defined here override and take precedence.
#location-autocomplete, .autocomplete__hint {
  padding: 9px;
}
